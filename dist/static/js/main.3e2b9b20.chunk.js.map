{"version":3,"sources":["components/layout/SingedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/clients/Dashboard.js","components/projects/ProjectTable.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/clients/CreateClient.js","store/actions/clientActions.js","components/clients/EditClient.js","components/projects/EditProject.js","components/projectdetails/documents/Documents.js","components/projectdetails/calendar/Calendar.js","components/projectdetails/invoices/Invoices.js","components/projectdetails/tasks/Tasks.js","components/projectdetails/ProjectDetail.js","components/dashboard/Dashboard.js","components/dashboard/NotFoundPage.js","App.js","serviceWorker.js","store/reducers/projectReducer.js","store/reducers/clientReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","onClick","to","profile","initials","SignedOutLinks","state","firebase","links","uid","style","padding","background","minWidth","color","src","width","height","isLoaded","Dashboard","selectedClientId","selectedClientFirstName","selectedClientLastName","selected","searching","result","clients","handleSearchChange","e","resource","setState","target","value","length","forEach","element","firstName","includes","lastName","username","email","push","handleCreate","history","handleDelete","firestore","window","confirm","collection","doc","delete","alert","handleEdit","link","pathname","columns","id","Header","accessor","d","Cell","row","original","Button","animated","backgroundColor","Content","visible","hidden","Icon","name","this","paddingTop","minHeight","paddingLeft","href","size","disabled","paddingRight","placeholder","onChange","data","defaultPageSize","getTdProps","rowInfo","column","instance","handleOriginal","index","Component","compose","ordered","firestoreConnect","orderBy","ProjectTable","selectedProjectId","selectedProjectTitle","projects","cc","getCurrentClient","filter","obj","clientId","title","match","params","clientfirstname","clientlastname","cid","unitNumber","streetAddress","cityAddress","stateAddress","zipCode","SignIn","password","handleChange","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","user","set","CreateProject","status","titleError","statusError","streetAddressError","cityAddressError","stateAddressError","zipCodeError","clientFirstName","location","clientLastName","validate","createProject","handleCancel","fontSize","defaultValue","project","authorId","add","authorFirstName","authorLastName","authorID","createdAt","Date","CreateClient","role","primaryContact","secondaryContact","firstNameError","lastNameError","roleError","emailError","primaryContactError","usernameError","createClient","client","EditClient","tempfirstName","templastName","temprole","tempemail","tempprimaryContact","tempState","editClient","tempClient","withRouter","console","log","update","EditProject","temptitle","tempstatus","tempstreetAddress","tempcityAddress","tempstateAddress","tempzipCode","project_id","editProject","client_id","tempProject","Documents","documents","projectID","getCurrentDocuments","map","item","key","float","calendar","getCurrentCalendar","Invoices","invoices","getCurrentInvoices","invoiceNo","orderedBy","toDate","toString","substr","Tasks","tasks","getCurrentTasks","ProjectDetail","document","invoice","task","handleClickDocument","handleClickCalendar","handleClickInvoice","handleClickTask","getCurrentProject","path","prev","border","borderLeft","borderBottom","borderTop","borderRight","Calendar","handleResultSelect","getSource","source","handleSearch","handleView","isLoading","results","App","backgroundImage","exact","component","from","ClientTable","ProjectDetails","NotFoundPage","Boolean","hostname","initState","projectReducer","action","clientReducer","authReducer","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e2b9b20.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    //<li><NavLink to='/delete'>Delete Project</NavLink></li>\r\n    //<li><NavLink to='/create'>Create Project</NavLink></li>\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li>\r\n                <NavLink to='/client' className='btn '>\r\n                \r\n                    {props.profile.initials}\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n \r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/signin'>Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SingedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    //console.log(auth);\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n   \r\n    //auth.isLoaded waiting for Auth Ready so the links don't flash\r\n    return(\r\n        <nav className=\"nav-extended\" style={{padding: '35px', background: 'linear-gradient(-90deg, teal, white)', minWidth:999}}>\r\n    \r\n            <div className=\"nav-wrapper\">\r\n                <Link to='/client' className=\"brand-logo\" style={{color: '#00695c'}}>\r\n                    <img src=\"https://static1.squarespace.com/static/5c1e749eaf20965d2a57556a/t/5c1e83714fa51a05053da701/1580156414739/?format=1500w\" width=\"80\" height=\"80\" />\r\n                    GR Design Admin Portal\r\n                </Link>\r\n                <div className=\"container\">\r\n                    { auth.isLoaded && links }  \r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport firebase from 'firebase/app'\r\nimport { Link } from 'react-router-dom'\r\nimport ReactTable from 'react-table-v6'\r\nimport { Icon, Select, Breadcrumb } from 'semantic-ui-react'\r\nimport { Button, Step } from 'semantic-ui-react'\r\nimport faker from 'faker'\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        selectedClientId: '',\r\n        selectedClientFirstName: '',\r\n        selectedClientLastName: '',\r\n        selected: -1,\r\n        searching: '',\r\n        result: this.props.clients\r\n    }\r\n\r\n    handleSearchChange = (e) => {\r\n        let result = [];\r\n        let resource = this.props.clients;\r\n\r\n        this.setState({\r\n            searching: e.target.value\r\n        })\r\n        if(resource.length > 1) {\r\n            resource.forEach(element => {\r\n                if(element.firstName.includes(e.target.value) || element.lastName.includes(e.target.value) || element.username.includes(e.target.value) || element.email.includes(e.target.value))\r\n                    result.push(element)\r\n            });\r\n            this.setState({\r\n                result: result\r\n            }) \r\n        }\r\n\r\n    }\r\n\r\n    handleCreate = () => {\r\n        this.props.history.push('/createclient')\r\n    }\r\n/*\r\n    handleCreateSample = () => {\r\n        const firestore = firebase.firestore();\r\n        firestore.collection('clients').add({\r\n            firstName: faker.name.firstName(),\r\n            lastName: faker.name.lastName(),\r\n            username:faker.internet.userName(),\r\n            role: 'engineer',\r\n            email: faker.internet.email(),\r\n            primaryContact: faker.phone.phoneNumber(),\r\n            secondaryContact: faker.phone.phoneNumber(),\r\n            authorID: this.props.auth.uid,\r\n            createdAt: new Date()\r\n        })\r\n    }\r\n*/\r\n    handleDelete = () => {\r\n        const firestore = firebase.firestore();\r\n        if(this.state.selectedClientId){\r\n            if (window.confirm('Are you sure you wish to delete the following client?   '+ this.state.selectedClientFirstName+' '+this.state.selectedClientLastName)) {\r\n                firestore.collection('clients').doc(this.state.selectedClientId).delete();\r\n                this.setState({\r\n                    selectedClientId: '',\r\n                    selectedClientFirstName: '',\r\n                    selectedClientLastName: '',\r\n                    selected: -1\r\n                })\r\n            }\r\n\r\n        } else {\r\n            alert(\"Select at least one client by checking the box to delete!\");\r\n        }\r\n    }\r\n\r\n    handleEdit = () => {\r\n        //console.log(this.props)\r\n\r\n        if(this.state.selectedClientId){\r\n            const link = {\r\n                pathname:'/editclient/' + this.state.selectedClientId\r\n            }\r\n            this.props.history.push(link)\r\n        } else {\r\n            alert(\"Select at least one client by checking the box to edit!\");\r\n        }\r\n    }\r\n    render(){\r\n        const columns = [\r\n            {   \r\n                id: 'col1',\r\n                Header: 'Name',\r\n                accessor: d => d.firstName+' '+d.lastName\r\n            }, {\r\n                id: 'col2',\r\n                Header: 'Role',\r\n                width: 100,\r\n                accessor: 'role'\r\n            }, {\r\n                id: 'col3',\r\n                Header: 'email',\r\n                accessor: 'email'\r\n            }, {\r\n                id: 'col4',\r\n                Header: 'Phone No.',\r\n                accessor: 'primaryContact'\r\n            }, {\r\n                id: 'col5',\r\n                Header: 'Add. Contact',\r\n                accessor: 'secondaryContact'\r\n            }, {\r\n                id: 'col6',\r\n                Header: '',\r\n                width: 100,\r\n                Cell: (row) => (\r\n                        \r\n                        <div>\r\n                            <Link to={'/client/'+row.original.id+'/projects/'} >\r\n                                <Button animated style={{backgroundColor: '#fafafa'}}>\r\n                                    <Button.Content visible >Projects</Button.Content>\r\n                                    <Button.Content hidden>\r\n                                        <Icon name='arrow right' />\r\n                                    </Button.Content>\r\n                                </Button>\r\n                            \r\n                            </Link>\r\n                        </div>\r\n                    )\r\n            }\r\n        ]\r\n        const { clients, auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"dashboard container\" style={{paddingTop:50, minWidth:1000, minHeight:1200}}>\r\n                \r\n   \r\n\r\n                        \r\n                <nav className=\"nav-extended grey lighten-1\" style={{background: 'linear-gradient(-90deg, #424242, #9e9e9e)'}}>\r\n                    <div className=\"col grey\" style={{paddingLeft: 10, background: 'linear-gradient(-90deg, #424242, #9e9e9e)'}}>\r\n                        <a href=\"#!\" className=\"breadcrumb\">Clients</a>\r\n                    </div>\r\n                    <div className=\"nav-wrapper\" >\r\n                        <ul style={{paddingLeft:10}}>\r\n                            <li><Button color='green' onClick={this.handleCreate} ><Icon name='add' size='small'/>Create</Button></li>\r\n                            {/*<li><Button color='orange' onClick={this.handleCreateSample}>Create a random Client</Button></li>*/}\r\n                            <li>\r\n                                {\r\n                                    this.state.selected === -1 ? \r\n                                    <Button disabled ><Icon name='delete' size='small'/>Delete</Button>\r\n                                    :\r\n                                    <Button color='red' onClick={this.handleDelete} ><Icon name='delete' size='small'/>Delete</Button>\r\n                                }\r\n                            </li>   \r\n                            <li> \r\n                                {\r\n                                    this.state.selected === -1 ? \r\n                                    <Button disabled ><Icon name='edit' size='small'/>Edit</Button>\r\n                                    :\r\n                                    <Button color='blue' onClick={this.handleEdit} ><Icon name='edit' size='small'/>Edit</Button>\r\n                                }\r\n                            </li>\r\n\r\n                            <li className=\"right\" style={{paddingRight: 20}}>\r\n                                {\r\n                                    \r\n                                    this.props.clients && this.props.clients.length > 0 ? \r\n                                    \r\n                                    <input\r\n                                        style={{background: 'white', paddingLeft: 10}}\r\n                                        type=\"text\" \r\n                                        id=\"searchbar\"\r\n                                        placeholder=\"search...\"\r\n                                        onChange={(e) => {this.handleSearchChange(e)}}\r\n                                    />\r\n                                \r\n                                    \r\n                                    :\r\n                                    <p>Create a Client to search</p>\r\n                                    \r\n                                }\r\n                            </li>\r\n                        </ul>\r\n\r\n                    </div>\r\n                </nav>\r\n            \r\n                \r\n                <ReactTable\r\n                    data={\r\n                        this.state.searching ? this.state.result : this.props.clients\r\n                    }\r\n                    columns={columns}\r\n                    defaultPageSize={10}\r\n                    className=\"-striped -highlight\"\r\n                    getTdProps={(state, rowInfo, column, instance) => {\r\n                        if (typeof rowInfo !== \"undefined\") {\r\n                            return {\r\n                                onClick: (e, handleOriginal) => {\r\n                                    \r\n                                    if  (this.state.selected === -1 || (this.state.selected !== -1 && this.state.selectedClientId !== rowInfo.original.id)){\r\n                                        this.setState({\r\n                                            selectedClientId: rowInfo.original.id,\r\n                                            selectedClientFirstName: rowInfo.original.firstName,\r\n                                            selectedClientLastName: rowInfo.original.lastName,\r\n                                            selected: rowInfo.index\r\n                                        })\r\n                                    } else {\r\n                                        this.setState({\r\n                                            selectedClientId: '',\r\n                                            selectedClientFirstName: '',\r\n                                            selectedClientLastName: '',\r\n                                            selected: -1\r\n                                        })\r\n                                    }\r\n                                    \r\n                                    if (handleOriginal) {\r\n                                        handleOriginal()\r\n                                    }\r\n                                },\r\n                                style: {\r\n                                    \r\n                                    background: rowInfo.index === this.state.selected ? '#b2dfdb' : '',\r\n                                    color: rowInfo.index === this.state.selected ? 'white' : 'black'\r\n                                }\r\n                            };\r\n                        }\r\n                        else {\r\n                            return {\r\n                                onClick: (e, handleOriginal) => {\r\n                                    this.setState({\r\n                                        selectedClientId: '',\r\n                                        selectedClientFirstName: '',\r\n                                        selectedClientLastName: '',\r\n                                        selected: -1\r\n                                    });\r\n                                    if (handleOriginal) {\r\n                                        handleOriginal()\r\n                                    }\r\n                                },\r\n                                style: {\r\n                                    background: 'white',\r\n                                    color: 'black'\r\n                                },\r\n                            }\r\n                        }\r\n                    }}\r\n                />  \r\n            \r\n            \r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state);\r\n    return {\r\n        //projects: state.project.projects\r\n        clients: state.firestore.ordered.clients,\r\n        auth: state.firebase.auth\r\n\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'clients', orderBy: ['createdAt', 'desc']}\r\n    ])\r\n)(Dashboard)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport ReactTable from 'react-table-v6'\r\nimport 'react-table-v6/react-table.css'\r\nimport firebase from 'firebase/app'\r\nimport { Link } from 'react-router-dom'\r\nimport { Icon, Select, Breadcrumb } from 'semantic-ui-react'\r\nimport { Button, Step } from 'semantic-ui-react'\r\nimport faker from 'faker'\r\n\r\nclass ProjectTable extends Component {\r\n    state = {\r\n        selectedProjectId: '',\r\n        selectedProjectTitle: '',\r\n        selected: -1,\r\n        searching: '',\r\n        result: []\r\n    }\r\n    \r\n    getCurrentClient() {\r\n        let cc = {};\r\n        const cid = this.props.match.params.id;\r\n        if(this.props.clients){\r\n            this.props.clients.forEach(element => {\r\n                if (element.id == cid){\r\n                    cc = element;\r\n                }   \r\n            })\r\n            return cc;\r\n        }\r\n        \r\n        \r\n        \r\n    } \r\n\r\n    handleSearchChange = (e) => {\r\n        let result = [];\r\n        let projects = this.props.projects;\r\n        const cc = this.getCurrentClient();\r\n\r\n        this.setState({\r\n            searching: e.target.value\r\n        })\r\n\r\n        if(projects){\r\n            let resource = projects.filter(obj => {\r\n                return obj.clientId === cc.id;\r\n              })\r\n\r\n            if(resource.length > 1) {\r\n                resource.forEach(element => {\r\n                    if(element.title.includes(e.target.value) )\r\n                        result.push(element)\r\n                });\r\n                this.setState({\r\n                    result: result\r\n                })\r\n            }\r\n        } \r\n\r\n        \r\n\r\n    }\r\n\r\n    handleCreate = () => {\r\n        const cc = this.getCurrentClient();\r\n        if(cc){\r\n            const link = {\r\n                pathname:'/' + this.props.match.params.id + '/createproject',\r\n                clientfirstname:cc.firstName,\r\n                clientlastname:cc.lastName\r\n            }\r\n            this.props.history.push(link)\r\n        }\r\n\r\n    }\r\n/*\r\n    handleCreateSample = () => {\r\n        const cc = this.getCurrentClient();\r\n        const firestore = firebase.firestore();\r\n        if(cc){\r\n            firestore.collection('projects').add({\r\n                title: faker.lorem.word(),\r\n                status: 'ongoing',\r\n                streetAddress: faker.address.streetAddress(),\r\n                unitNumber: faker.random.alphaNumeric(),\r\n                cityAddress: faker.address.city(),\r\n                stateAddress: faker.address.stateAbbr(),\r\n                zipCode: faker.address.zipCode(),\r\n                clientId: cc.id,\r\n                clientFirstName: cc.firstName,\r\n                clientLastName: cc.lastName,\r\n                authorFirstName: 'faker',\r\n                authorLastName: 'faker',\r\n                authorID: this.props.auth.uid,\r\n                createdAt: new Date()\r\n            })\r\n        }\r\n    }\r\n*/\r\n    handleDelete = () => {\r\n        const firestore = firebase.firestore();\r\n        if(this.state.selectedProjectId){\r\n            if (window.confirm('Are you sure you wish to delete the following projects?   '+ this.state.selectedProjectTitle)) {\r\n                firestore.collection('projects').doc(this.state.selectedProjectId).delete();\r\n                this.setState({\r\n                    selectedProjectId: '',\r\n                    selectedProjectTitle: '',\r\n                    selected: -1\r\n                })\r\n            }\r\n        } else {\r\n            alert(\"Select at least one project by checking the box to delete!\");\r\n        }\r\n    }\r\n\r\n    handleEdit = () => {\r\n        const cc = this.getCurrentClient();\r\n        if(cc){\r\n            const link = {\r\n                pathname:'/client/' + this.props.match.params.id + '/editproject/' + this.state.selectedProjectId,\r\n                clientfirstname:cc.firstName,\r\n                clientlastname:cc.lastName\r\n            }\r\n            this.props.history.push(link)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        //console.log(this.props)\r\n        const columns = [\r\n            {   \r\n                id: 'col1',\r\n                Header: 'Title',\r\n                accessor: 'title' // String-based value accessors!\r\n            }, {\r\n                id: 'col2',\r\n                Header: 'Status',\r\n                width: 100,\r\n                accessor: 'status'\r\n            }, {\r\n                id: 'col3',\r\n                Header: 'Address',\r\n                accessor: d => d.unitNumber+' '+d.streetAddress+', '+d.cityAddress+', '+d.stateAddress+' '+d.zipCode\r\n            }, {\r\n                id: 'col4',\r\n                Header: '',\r\n                width: 100,\r\n                Cell: (row) => (\r\n                        \r\n                        <div>\r\n                            \r\n                            <Link to={'/client/'+this.props.match.params.id+'/projects/'+row.original.id+'/'}>\r\n                                <Button animated style={{backgroundColor: '#fafafa'}}>\r\n                                    <Button.Content visible>Details</Button.Content>\r\n                                    <Button.Content hidden>\r\n                                        <Icon name='arrow right' />\r\n                                    </Button.Content>\r\n                                </Button>\r\n                            \r\n                            </Link>\r\n                        </div>\r\n                    )\r\n            }\r\n        ]\r\n\r\n        let cc = this.getCurrentClient();\r\n        const { projects, auth } = this.props;\r\n        //if(!auth.uid) return <Redirect to='/signin' />\r\n        const cid = this.props.match.params.id;\r\n\r\n        if(projects){\r\n            var result = projects.filter(obj => {\r\n                return obj.clientId === cid;\r\n              })\r\n        } \r\n        //console.log(result)\r\n        return (\r\n            <div className=\"dashboard container\" style={{paddingTop:50, minWidth:1000, minHeight:1200}}>\r\n                \r\n                <nav className=\"nav-extended grey lighten-1\" style={{background: 'linear-gradient(-90deg, #424242, #9e9e9e)'}}>\r\n                    <div className=\"col grey\" style={{paddingLeft: 10, background: 'linear-gradient(-90deg, #424242, #9e9e9e)'}}>\r\n                        <a href=\"/client\" className=\"breadcrumb\">Clients</a>\r\n                        <a href=\"#!\" className=\"breadcrumb\">\r\n                            {\r\n                                cc ?\r\n                                cc.firstName+' '+cc.lastName+'\\'s Projects'\r\n                                :\r\n                                <div className=\"progress\">\r\n                                    <div className=\"indeterminate\"></div>\r\n                                </div>\r\n                            }\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"nav-wrapper\" >\r\n                        <ul style={{paddingLeft:10}}>\r\n                            <li><Button color='green' onClick={this.handleCreate} ><Icon name='add' size='small'/>Create</Button></li>\r\n                            {/*<li><Button color='orange' onClick={this.handleCreateSample}>Create a random Client</Button></li>*/}\r\n                            <li>\r\n                                {\r\n                                    this.state.selected === -1 ? \r\n                                    <Button disabled ><Icon name='delete' size='small'/>Delete</Button>\r\n                                    :\r\n                                    <Button color='red' onClick={this.handleDelete} ><Icon name='delete' size='small'/>Delete</Button>\r\n                                }\r\n                            </li>   \r\n                            <li> \r\n                                {\r\n                                    this.state.selected === -1 ? \r\n                                    <Button disabled ><Icon name='edit' size='small'/>Edit</Button>\r\n                                    :\r\n                                    <Button color='blue' onClick={this.handleEdit} ><Icon name='edit' size='small'/>Edit</Button>\r\n                                }\r\n                            </li>\r\n                            <li className=\"right\" style={{paddingRight: 20}}>\r\n                                {\r\n                                    \r\n                                    this.props.projects && this.props.projects.length > 0 ? \r\n                                    \r\n                                    <input\r\n                                        style={{background: 'white', paddingLeft: 10}}\r\n                                        type=\"text\" \r\n                                        id=\"searchbar\"\r\n                                        placeholder=\"search...\"\r\n                                        onChange={(e) => {this.handleSearchChange(e)}}\r\n                                    />\r\n                                \r\n                                    \r\n                                    :\r\n                                    <p>Create a Client to search</p>\r\n                                    \r\n                                }\r\n                            </li>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </nav>\r\n                <ReactTable\r\n                    data={\r\n                        this.state.searching ? this.state.result : result\r\n                    }\r\n                    columns={columns}\r\n                    defaultPageSize={10}\r\n                    className=\"-striped -highlight\"\r\n                    getTdProps={(state, rowInfo, column, instance) => {\r\n                        if (typeof rowInfo !== \"undefined\") {\r\n                            return {\r\n                                onClick: (e, handleOriginal) => {\r\n                                    if  (this.state.selected === -1 || (this.state.selected !== -1 && this.state.selectedProjectId !== rowInfo.original.id)){\r\n                                        this.setState({\r\n                                            selectedProjectId: rowInfo.original.id,\r\n                                            selectedProjectTitle: rowInfo.original.title,\r\n                                            selected: rowInfo.index\r\n                                        })\r\n                                    } else {\r\n                                        this.setState({\r\n                                            selectedProjectId: '',\r\n                                            selectedProjectTitle: '',\r\n                                            selected: -1\r\n                                        })\r\n                                    }\r\n                                    if (handleOriginal) {\r\n                                        handleOriginal()\r\n                                    }\r\n                                },\r\n                                style: {\r\n                                    background: rowInfo.index === this.state.selected ? '#b2dfdb' : '',\r\n                                    color: rowInfo.index === this.state.selected ? 'white' : 'black'\r\n                                }\r\n                            };\r\n                        }\r\n                        else {\r\n                            return {\r\n                                onClick: (e, handleOriginal) => {\r\n                                    this.setState({\r\n                                        selectedProjectId: '',\r\n                                        selectedProjectTitle: '',\r\n                                        selected: -1\r\n                                    });\r\n                                    if (handleOriginal) {\r\n                                        handleOriginal()\r\n                                    }\r\n                                },\r\n                                style: {\r\n                                    background: 'white',\r\n                                    color: 'black'\r\n                                },\r\n                            }\r\n                        }\r\n                    }}\r\n                />  \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        //projects: state.project.projects\r\n        clients: state.firestore.ordered.clients,\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth\r\n\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n        {collection: 'clients', orderBy: ['createdAt', 'desc']}\r\n    ])\r\n)(ProjectTable)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email:'',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state)\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if(auth.uid) return <Redirect to='/client' />      \r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text\">\r\n                        Sign In\r\n                    </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn\">Login</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        { authError ? <p>{ authError }</p> : null }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email:'',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state)\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />      \r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text\">\r\n                        Sign Up\r\n                    </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstname\">firstname</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastname\">lastname</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        status: '',\r\n        streetAddress: '',\r\n        unitNumber: '',\r\n        cityAddress: '',\r\n        stateAddress: '',\r\n        zipCode: '',\r\n\r\n        titleError: '',\r\n        statusError: '',\r\n        streetAddressError: '',\r\n        cityAddressError: '',\r\n        stateAddressError: '',\r\n        zipCodeError: '',\r\n\r\n        clientId: this.props.match.params.id,\r\n        clientFirstName: this.props.location.clientfirstname,\r\n        clientLastName: this.props.location.clientlastname\r\n\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    validate = () => {\r\n        let titleError= '';\r\n        let statusError= '';\r\n        let streetAddressError= '';\r\n        let cityAddressError= '';\r\n        let stateAddressError= '';\r\n        let zipCodeError= '';\r\n\r\n\r\n        if (!this.state.title) {\r\n            titleError = 'Title cannot be blank'\r\n        }\r\n\r\n        if (this.state.status == 'choose') {\r\n            statusError = 'must select status'\r\n        }\r\n\r\n        if (!this.state.status) {\r\n            statusError = 'must select status'\r\n        }\r\n\r\n        if (!this.state.streetAddress) {\r\n            streetAddressError = 'Street Address cannot be blank'\r\n        }\r\n\r\n        if (!this.state.cityAddress) {\r\n            cityAddressError = 'City cannot be blank'\r\n        }\r\n\r\n        if (!this.state.stateAddress) {\r\n            stateAddressError = 'State cannot be blank'\r\n        }\r\n\r\n        if (!this.state.zipCode) {\r\n            zipCodeError = 'zip code cannot be blank'\r\n        }\r\n\r\n        if (this.state.zipCode.length != 5) {\r\n            zipCodeError = 'invalid zip code'\r\n        }\r\n\r\n        /*\r\n        if (!(!this.state.zipCode.match(\"^[0-9 ]*$\"))) {\r\n            zipCodeError = 'zip code can only have numbers in the US'\r\n        }\r\n        */\r\n        //setting state with object, awesome js syntax\r\n        if (titleError || statusError || streetAddressError || cityAddressError || stateAddressError || zipCodeError) {\r\n            this.setState({ titleError, statusError, streetAddressError, cityAddressError, stateAddressError, zipCodeError });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            const link = {\r\n                pathname:'/client/'+this.props.match.params.id+'/projects'\r\n            }\r\n            this.props.createProject(this.state)\r\n            this.props.history.push(link)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleCancel = (e) => {\r\n        e.preventDefault();\r\n        const link = {\r\n            pathname:'/client/'+this.props.match.params.id+'/projects'\r\n        }\r\n        this.props.history.push(link)\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\">\r\n                    <h5 className=\"grey-text\">\r\n                        Create Project\r\n                    </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                        {this.state.titleError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.titleError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <select className=\"browser-default\" id=\"status\" onChange={this.handleChange} defaultValue=\"0\" >\r\n                            <option value=\"0\" disabled>Choose a Status</option>\r\n                            <option value=\"Ongoing\">Ongoing</option>\r\n                            <option value=\"Completed\">Completed</option>\r\n                        </select>\r\n                        {this.state.statusError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.statusError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Street address</label>\r\n                        <input type=\"text\" id=\"streetAddress\" onChange={this.handleChange}/>\r\n                        {this.state.streetAddressError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.streetAddressError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Apartment/Unit No.</label>\r\n                        <input type=\"text\" id=\"unitNumber\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">City</label>\r\n                        <input type=\"text\" id=\"cityAddress\" onChange={this.handleChange}/>\r\n                        {this.state.cityAddressError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.cityAddressError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">State</label>\r\n                        <input type=\"text\" id=\"stateAddress\" onChange={this.handleChange}/>\r\n                        {this.state.stateAddressError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.stateAddressError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">ZIP code</label>\r\n                        <input type=\"text\" id=\"zipCode\" onChange={this.handleChange}/>\r\n                        {this.state.zipCodeError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.zipCodeError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn\" onClick={this.handleSubmit}>Create</button>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn\" onClick={this.handleCancel}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    //dispatch method dispatches action to reducer\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            title: project.title,\r\n            status: project.status,\r\n            streetAddress: project.streetAddress,\r\n            unitNumber: project.unitNumber,\r\n            cityAddress: project.cityAddress,\r\n            stateAddress: project.stateAddress,\r\n            zipCode: project.zipCode,\r\n            clientId: project.clientId,\r\n            clientFirstName: project.clientFirstName,\r\n            clientLastName: project.clientLastName,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorID: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT', project })\r\n        }).catch((err) => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err })\r\n        })\r\n\r\n\r\n       \r\n    }\r\n    \r\n};\r\n\r\nexport const editProject = (project, id) => {\r\n    //dispatch method dispatches action to reducer\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        console.log(project);\r\n\r\n        if(project.title) firestore.collection('projects').doc(id).update({title: project.title});\r\n        if(project.status) firestore.collection('projects').doc(id).update({status: project.status});\r\n        if(project.streetAddress) firestore.collection('projects').doc(id).update({streetAddress: project.streetAddress});\r\n        if(project.unitNumber) firestore.collection('projects').doc(id).update({unitNumber: project.unitNumber});\r\n        if(project.cityAddress) firestore.collection('projects').doc(id).update({cityAddress: project.cityAddress});\r\n        if(project.stateAddress) firestore.collection('projects').doc(id).update({stateAddress: project.stateAddress});\r\n        if(project.zipCode) firestore.collection('projects').doc(id).update({zipCode: project.zipCode});\r\n        /*\r\n        if(project.firstName) firestore.collection('projects').doc(id).update({firstName: client.firstName})\r\n        if(client.lastName) firestore.collection('clients').doc(id).update({lastName: client.lastName})\r\n        if(client.role) firestore.collection('clients').doc(id).update({role: client.role})\r\n        if(client.email) firestore.collection('clients').doc(id).update({email: client.email})\r\n        if(client.primaryContact) firestore.collection('clients').doc(id).update({primaryContact: client.primaryContact})\r\n        if(client.secondaryContact) firestore.collection('clients').doc(id).update({secondaryContact: client.secondaryContact})\r\n        \r\n        else console.log('ll')\r\n        firestore.collection('clients').doc(id).update({\r\n            firstName: client.firstName,\r\n            lastName: client.lastName,\r\n            role: client.role,\r\n            email: client.email,\r\n            primaryContact: client.primaryContact,\r\n            secondaryContact: client.secondaryContact\r\n        }).then(() => {\r\n            dispatch({type: 'UPDATE_CLIENT', client })\r\n        }).catch((err) => {\r\n            dispatch({type: 'UPDATE_CLIENT_ERROR', err })\r\n        })\r\n*/\r\n\r\n       \r\n    }\r\n    \r\n};","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createClient } from '../../store/actions/clientActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateClient extends Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        role: '',\r\n        email: '',\r\n        primaryContact: '',\r\n        secondaryContact: '',\r\n        username: '',\r\n\r\n        firstNameError: '',\r\n        lastNameError: '',\r\n        roleError: '',\r\n        emailError: '',\r\n        primaryContactError: '',\r\n        usernameError: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    validate = () => {\r\n        let firstNameError= '';\r\n        let lastNameError= '';\r\n        let emailError='';\r\n        let roleError='';\r\n        let primaryContactError='';\r\n        let usernameError='';\r\n        if (!this.state.firstName) {\r\n            firstNameError = 'Firstname cannot be blank'\r\n        }\r\n\r\n        if (!this.state.lastName) {\r\n            lastNameError = 'Lastname cannot be blank'\r\n        }\r\n\r\n        if (!this.state.username) {\r\n            usernameError = 'username cannot be blank'\r\n        }\r\n\r\n        if (this.state.role == 'choose') {\r\n            roleError = 'must select role'\r\n        }\r\n\r\n        if (!this.state.role) {\r\n            roleError = 'must select role'\r\n        }\r\n\r\n        if (!this.state.email.includes('@')) {\r\n            emailError = 'invalid email';\r\n        }\r\n\r\n        if (!this.state.email.includes('.')) {\r\n            emailError = 'invalid email';\r\n        }\r\n\r\n        if (!this.state.primaryContact) {\r\n            primaryContactError = 'primary contact cannot be blank'\r\n        }\r\n        //setting state with object, awesome js syntax\r\n        if (emailError || firstNameError || lastNameError || roleError || primaryContactError || usernameError) {\r\n            this.setState({ emailError, firstNameError, lastNameError, roleError, primaryContactError, usernameError });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            this.props.createClient(this.state)\r\n            this.props.history.push('/client')\r\n        }\r\n\r\n    }\r\n\r\n    handleCancel = (e) => {\r\n        e.preventDefault();\r\n        this.props.history.push('/client')\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\">\r\n                    <h5 className=\"grey-text\">\r\n                        Create Client\r\n                    </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">First name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                        {this.state.firstNameError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.firstNameError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Last name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                        {this.state.lastNameError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.lastNameError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">username</label>\r\n                        <input type=\"text\" id=\"username\" onChange={this.handleChange}/>\r\n                        {this.state.usernameError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.usernameError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div>\r\n                        <select className=\"browser-default\" id=\"role\" onChange={this.handleChange} defaultValue=\"choose\">\r\n                            <option value=\"choose\" disabled>Choose a role</option>\r\n                            <option value=\"engineer\">Engineer</option>\r\n                            <option value=\"manager\">Manager</option>\r\n                        </select>\r\n                        {this.state.roleError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.roleError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">email</label>\r\n                        <input type=\"text\" id=\"email\" onChange={this.handleChange}/>\r\n                        {this.state.emailError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.emailError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Primary phone number</label>\r\n                        <input type=\"text\" id=\"primaryContact\" onChange={this.handleChange}/>\r\n                        {this.state.primaryContactError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.primaryContactError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Secondary Contact</label>\r\n                        <input type=\"text\" id=\"secondaryContact\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn\" onClick={this.handleSubmit}>Create</button>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn\" onClick={this.handleCancel}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createClient: (client) => dispatch(createClient(client))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateClient)\r\n","export const createClient = (client) => {\r\n    //dispatch method dispatches action to reducer\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('clients').add({\r\n            email:client.email,\r\n            firstName:client.firstName,\r\n            lastName:client.lastName,\r\n            primaryContact:client.primaryContact,\r\n            secondaryContact:client.secondaryContact,\r\n            role:client.role,\r\n            username:client.username,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorID: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_CLIENT', client })\r\n        }).catch((err) => {\r\n            dispatch({type: 'CREATE_CLIENT_ERROR', err })\r\n        })\r\n\r\n\r\n       \r\n    }\r\n    \r\n};\r\n\r\nexport const editClient = (client, id) => {\r\n    //dispatch method dispatches action to reducer\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        console.log(client)\r\n        if(client.firstName) firestore.collection('clients').doc(id).update({firstName: client.firstName})\r\n        if(client.lastName) firestore.collection('clients').doc(id).update({lastName: client.lastName})\r\n        if(client.role) firestore.collection('clients').doc(id).update({role: client.role})\r\n        if(client.email) firestore.collection('clients').doc(id).update({email: client.email})\r\n        if(client.primaryContact) firestore.collection('clients').doc(id).update({primaryContact: client.primaryContact})\r\n        if(client.secondaryContact) firestore.collection('clients').doc(id).update({secondaryContact: client.secondaryContact})\r\n\r\n    }\r\n    \r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { editClient } from '../../store/actions/clientActions';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n\r\nclass EditClient extends Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        role: '',\r\n        email: '',\r\n        primaryContact: '',\r\n        secondaryContact: '',\r\n\r\n        tempfirstName: '1',\r\n        templastName: '1',\r\n        temprole: '1',\r\n        tempemail: '1',\r\n        tempprimaryContact: '1',\r\n\r\n        firstNameError: '',\r\n        lastNameError: '',\r\n        roleError: '',\r\n        emailError: '',\r\n        primaryContactError: ''\r\n    }\r\n    handleChange = (e) => {\r\n        let tempState = 'temp'+e.target.id;\r\n\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n            [tempState]: ''\r\n        })\r\n    }\r\n\r\n    validate = () => {\r\n        let firstNameError= '';\r\n        let lastNameError= '';\r\n        let emailError='';\r\n        let roleError='';\r\n        let primaryContactError='';\r\n\r\n        if (!this.state.firstName && !this.state.tempfirstName) {\r\n            firstNameError = 'Firstname cannot be blank'\r\n        }\r\n\r\n        if (!this.state.lastName && !this.state.templastName) {\r\n            lastNameError = 'Lastname cannot be blank'\r\n        }\r\n\r\n        if (this.state.role == 'choose' && !this.state.temprole) {\r\n            roleError = 'must select role'\r\n        }\r\n\r\n        if (!this.state.role && !this.state.temprole) {\r\n            roleError = 'must select role'\r\n        }\r\n\r\n        if (!this.state.email.includes('@') && !this.state.tempemail) {\r\n            emailError = 'invalid email';\r\n        }\r\n\r\n        if (!this.state.email.includes('.') && !this.state.tempemail) {\r\n            emailError = 'invalid email';\r\n        }\r\n\r\n        if (!this.state.primaryContact && !this.state.tempprimaryContact) {\r\n            primaryContactError = 'primary contact cannot be blank'\r\n        }\r\n        //setting state with object, awesome js syntax\r\n        if (emailError || firstNameError || lastNameError || roleError || primaryContactError) {\r\n            this.setState({ emailError, firstNameError, lastNameError, roleError, primaryContactError });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            this.props.editClient(this.state, this.props.match.params.id)\r\n            this.props.history.push('/client')\r\n        }\r\n    }\r\n\r\n    handleCancel = (e) => {\r\n        e.preventDefault();\r\n        this.props.history.push('/client')\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        let tempClient = {}\r\n        this.props.clients.forEach(client => {\r\n            if(client.id == this.props.match.params.id) {\r\n                tempClient=client\r\n            }\r\n        })\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\">\r\n                    <h5 className=\"grey-text\">\r\n                        Editing Client Info: {tempClient.firstName+' '+tempClient.lastName}\r\n                    </h5>\r\n                    <div className=\"input-field\">\r\n                        <p className=\"grey-text\">First name</p>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} defaultValue={tempClient.firstName} />\r\n                        {this.state.firstNameError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.firstNameError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <p className=\"grey-text\">Last name</p>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} defaultValue={tempClient.lastName} />\r\n                        {this.state.lastNameError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.lastNameError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <select className=\"browser-default\" id=\"role\" onChange={this.handleChange} defaultValue={tempClient.role} >\r\n                            <option value=\"\" disabled>Choose a role</option>\r\n                            <option value=\"engineer\">Engineer</option>\r\n                            <option value=\"manager\">Manager</option>\r\n                            {this.state.roleError ? (\r\n                                <div style={{fontSize:12, color: \"red\"}}>\r\n                                    {this.state.roleError}\r\n                                </div>\r\n                            ) : null}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <p className=\"grey-text\">email</p>\r\n                        <input type=\"text\" id=\"email\" onChange={this.handleChange} defaultValue={tempClient.email} />\r\n                        {this.state.emailError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.emailError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <p className=\"grey-text\">Primary phone number</p>\r\n                        <input type=\"text\" id=\"primaryContact\" onChange={this.handleChange} defaultValue={tempClient.primaryContact} />\r\n                        {this.state.primaryContactError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.primaryContactError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <p className=\"grey-text\">Seconday Contact</p>\r\n                        <input type=\"text\" id=\"secondaryContact\" onChange={this.handleChange} defaultValue={tempClient.secondaryContact} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn\" onClick={this.handleSubmit}>Edit</button>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn\" onClick={this.handleCancel}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        clients: state.firestore.ordered.clients,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editClient: (client, id) => dispatch(editClient(client, id))\r\n    }\r\n}\r\n\r\nexport default withRouter(compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        {collection: 'clients', orderBy: ['firstName', 'desc']}\r\n    ])\r\n)(EditClient))\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { editProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nclass EditProject extends Component {\r\n    state = {\r\n        title: '',\r\n        status: '',\r\n        streetAddress: '',\r\n        unitNumber: '',\r\n        cityAddress: '',\r\n        stateAddress: '',\r\n        zipCode: '',\r\n\r\n        temptitle: '1',\r\n        tempstatus: '1',\r\n        tempstreetAddress: '1',\r\n        tempcityAddress: '1',\r\n        tempstateAddress: '1',\r\n        tempzipCode: '1',\r\n\r\n        titleError: '',\r\n        statusError: '',\r\n        streetAddressError: '',\r\n        cityAddressError: '',\r\n        stateAddressError: '',\r\n        zipCodeError: '',\r\n\r\n        cid: this.props.match.params.project_id\r\n    }\r\n    handleChange = (e) => {\r\n        let tempState = 'temp'+e.target.id;\r\n\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n            [tempState]: ''\r\n        })\r\n    }\r\n\r\n    validate = () => {\r\n        let titleError= '';\r\n        let statusError= '';\r\n        let streetAddressError= '';\r\n        let cityAddressError= '';\r\n        let stateAddressError= '';\r\n        let zipCodeError= '';\r\n\r\n        if (!this.state.title && !this.state.temptitle) {\r\n            titleError = 'Title cannot be blank'\r\n        }\r\n\r\n        if (this.state.status == 'choose' && !this.state.tempstatus) {\r\n            statusError = 'must select status'\r\n        }\r\n\r\n        if (!this.state.status && !this.state.tempstatus) {\r\n            statusError = 'must select status'\r\n        }\r\n\r\n        if (!this.state.streetAddress && !this.state.tempstreetAddress) {\r\n            streetAddressError = 'Street Address cannot be blank'\r\n        }\r\n\r\n        if (!this.state.cityAddress && !this.state.tempcityAddress) {\r\n            cityAddressError = 'City cannot be blank'\r\n        }\r\n\r\n        if (!this.state.stateAddress && !this.state.tempstateAddress) {\r\n            stateAddressError = 'State cannot be blank'\r\n        }\r\n\r\n        if (!this.state.zipCode && !this.state.tempzipCode) {\r\n            zipCodeError = 'zip code cannot be blank'\r\n        }\r\n\r\n        if (this.state.zipCode.length != 5 && !this.state.tempzipCode) {\r\n            zipCodeError = 'invalid zip code'\r\n        }\r\n\r\n        //setting state with object, awesome js syntax\r\n        if (titleError || statusError || streetAddressError || cityAddressError || stateAddressError || zipCodeError) {\r\n            this.setState({ titleError, statusError, streetAddressError, cityAddressError, stateAddressError, zipCodeError });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n            this.props.editProject(this.state, this.props.match.params.project_id);\r\n            const cid=this.props.match.params.client_id;\r\n            this.props.history.push('/client/'+cid+'/projects');\r\n        }\r\n        \r\n    }\r\n\r\n    handleCancel = (e) => {\r\n        e.preventDefault();\r\n        const cid=this.props.match.params.client_id;\r\n        this.props.history.push('/client/'+cid+'/projects')\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        let tempProject = {}\r\n        \r\n        \r\n        this.props.projects.forEach(project => {\r\n            if(project.id == this.props.match.params.project_id) {\r\n                tempProject=project\r\n            }\r\n        })\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\">\r\n                    <h5 className=\"grey-text\">\r\n                        Editing Project {tempProject.title}\r\n                    </h5>\r\n                    <div className=\"input-field\">\r\n                        <p htmlFor=\"title\">Title</p>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} defaultValue={tempProject.title}/>\r\n                        {this.state.titleError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.titleError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <select className=\"browser-default\" id=\"status\" onChange={this.handleChange} defaultValue={tempProject.status} >\r\n                            <option value=\"0\" disabled>Choose a Status</option>\r\n                            <option value=\"Ongoing\">Ongoing</option>\r\n                            <option value=\"Completed\">Completed</option>\r\n                        </select>\r\n                        {this.state.statusError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.statusError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <p htmlFor=\"title\">Street address</p>\r\n                        <input type=\"text\" id=\"streetAddress\" onChange={this.handleChange} defaultValue={tempProject.streetAddress} />\r\n                        {this.state.streetAddressError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.streetAddressError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <p htmlFor=\"title\">Apartment/Unit No.</p>\r\n                        <input type=\"text\" id=\"unitNumber\" onChange={this.handleChange} defaultValue={tempProject.unitNumber} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <p htmlFor=\"title\">City</p>\r\n                        <input type=\"text\" id=\"cityAddress\" onChange={this.handleChange} defaultValue={tempProject.cityAddress} />\r\n                        {this.state.cityAddressError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.cityAddressError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <p htmlFor=\"title\">State</p>\r\n                        <input type=\"text\" id=\"stateAddress\" onChange={this.handleChange} defaultValue={tempProject.stateAddress} />\r\n                        {this.state.stateAddressError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.stateAddressError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <p htmlFor=\"title\">ZIP code</p>\r\n                        <input type=\"text\" id=\"zipCode\" onChange={this.handleChange} defaultValue={tempProject.zipCode} />\r\n                        {this.state.zipCodeError ? (\r\n                            <div style={{fontSize:12, color: \"red\"}}>\r\n                                {this.state.zipCodeError}\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn\" onClick={this.handleSubmit}>Edit</button>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn\" onClick={this.handleCancel}>Cancel</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editProject: (project, id) => dispatch(editProject(project, id))\r\n    }\r\n}\r\n\r\nexport default withRouter(compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['title', 'desc']}\r\n    ])\r\n)(EditProject))\r\n","import React, { Component } from 'react'\r\nimport { Segment, Dimmer, Loader, Image, Icon } from 'semantic-ui-react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Route, Link, Redirect, Switch, BrowserRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport ReactTable from 'react-table-v6'\r\nimport { Grid, Card } from 'semantic-ui-react';\r\n\r\nclass Documents extends Component {\r\n    getCurrentDocuments() {\r\n        var result = [];\r\n        \r\n        if(this.props.documents){\r\n            this.props.documents.forEach(element => {\r\n                if (element.projectID === this.props.match.params.project_id)\r\n                    result.push(element)\r\n            });\r\n            \r\n            return result;\r\n        }\r\n    } \r\n    render() {\r\n        //const { documents, auth } = this.props;\r\n        var result = this.getCurrentDocuments();\r\n        \r\n\r\n        return (\r\n            <div >\r\n                    {result && result.map(item => {\r\n                        return (\r\n                            <a href={item.link} key={item.id} style={{float: 'left'}}>\r\n                                <Icon name=\"folder\" size=\"huge\" />\r\n                                <p>{item.name}</p>\r\n                            </a>\r\n                            \r\n                        )\r\n                                    \r\n                                    \r\n                                \r\n                    })}\r\n           \r\n            </div>\r\n        \r\n        )\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        documents: state.firestore.ordered.documents,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default withRouter(compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'documents'}\r\n    ])\r\n)(Documents))","import React, { Component } from 'react'\r\nimport { Segment, Dimmer, Loader, Image, Icon } from 'semantic-ui-react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Route, Link, Redirect, Switch, BrowserRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport ReactTable from 'react-table-v6'\r\nimport { Grid, Card } from 'semantic-ui-react';\r\n\r\nclass Documents extends Component {\r\n    getCurrentCalendar() {\r\n        var result = [];\r\n        \r\n        if(this.props.calendar){\r\n            this.props.calendar.forEach(element => {\r\n                if (element.projectID === this.props.match.params.project_id)\r\n                    result.push(element)\r\n            });\r\n            \r\n            return result;\r\n        }\r\n    } \r\n    render() {\r\n        //const { documents, auth } = this.props;\r\n        var result = this.getCurrentCalendar();\r\n        \r\n\r\n        return (\r\n            <div >\r\n                    {result && result.map(item => {\r\n                        return (\r\n                            <a href={item.link} key={item.id} style={{float: 'left'}}>\r\n                                <Icon name=\"calendar alternate\" size=\"huge\" />\r\n                                <p>{item.name}</p>\r\n                            </a>\r\n                            \r\n                        )\r\n                                    \r\n                                    \r\n                                \r\n                    })}\r\n           \r\n            </div>\r\n        \r\n        )\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        calendar: state.firestore.ordered.calendar,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default withRouter(compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'calendar'}\r\n    ])\r\n)(Documents))","import React, { Component } from 'react'\r\nimport { Header, Icon, Menu, Sidebar, Dropdown } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport firebase from 'firebase/app'\r\nimport ReactTable from 'react-table-v6'\r\n\r\nclass Invoices extends Component {\r\n  getCurrentInvoices() {\r\n      var result = [];\r\n      \r\n      if(this.props.invoices){\r\n          this.props.invoices.forEach(element => {\r\n              if (element.projectID === this.props.match.params.project_id)\r\n                  result.push(element)\r\n          });\r\n          \r\n          return result;\r\n      }\r\n  } \r\n  render() {\r\n      \r\n      var result = this.getCurrentInvoices();\r\n      \r\n      if (result && result.length > 0) {\r\n        //var timestr = result[0].createdAt.toDate().toString().substr(4,12);\r\n        //console.log(timestr)\r\n        //console.log(format(result[0].createdAt, 'MMMM Do, YYYY H:mma'))\r\n        return (\r\n          <table className=\"highlight\">\r\n            <thead>\r\n              <tr>\r\n                  <th>Invoice No.</th>\r\n                  <th>Title</th>\r\n                  <th>Ordered By</th>\r\n                  <th>Date Placed</th>\r\n              </tr>\r\n            </thead>\r\n    \r\n            <tbody>\r\n              {\r\n                result && result.map(element => {\r\n                  return (\r\n                    <tr key={element.id}>\r\n                      <td>{element.invoiceNo}</td>\r\n                      <td>{element.title}</td>\r\n                      <td>{element.orderedBy}</td>\r\n                      <td>{element.createdAt.toDate().toString().substr(4,12)}</td>\r\n                    </tr>\r\n                  )\r\n                })\r\n              }\r\n              \r\n            </tbody>\r\n        </table>\r\n      \r\n        )\r\n      }else{\r\n        return (\r\n          <div className=\"progress\">\r\n              <div className=\"indeterminate\"></div>\r\n          </div>\r\n        )\r\n      }\r\n      \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        invoices: state.firestore.ordered.invoices,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default withRouter(compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'invoices'}\r\n    ])\r\n)(Invoices))","import React, { Component } from 'react'\r\nimport { Header, Icon, Menu, Sidebar, Dropdown } from 'semantic-ui-react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Route, Link, Redirect, Switch, BrowserRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport firebase from 'firebase/app'\r\nimport ReactTable from 'react-table-v6'\r\nclass Tasks extends Component {\r\n  getCurrentTasks() {\r\n      var result = [];\r\n      \r\n      if(this.props.tasks){\r\n          this.props.tasks.forEach(element => {\r\n              if (element.projectID === this.props.match.params.project_id)\r\n                  result.push(element)\r\n          });\r\n          \r\n          return result;\r\n      }\r\n  } \r\n  render() {\r\n      console.log(this.props)\r\n      var result = this.getCurrentTasks();\r\n      \r\n      if (result && result.length > 0) {\r\n        return (\r\n          <table className=\"highlight\">\r\n            <thead>\r\n              <tr>\r\n                  \r\n                  <th>Title</th>\r\n                  <th>Ordered By</th>\r\n                  <th>Date Placed</th>\r\n              </tr>\r\n            </thead>\r\n    \r\n            <tbody>\r\n              {\r\n                result && result.map(element => {\r\n                  return (\r\n                    <tr key={element.id}>\r\n                      <td>{element.title}</td>\r\n                      <td>{element.orderedBy}</td>\r\n                      <td>{element.createdAt.toDate().toString().substr(4,12)}</td>\r\n                      \r\n                    </tr>\r\n                  )\r\n                })\r\n              }\r\n              \r\n            </tbody>\r\n        </table>\r\n      \r\n        )\r\n      }else{\r\n        return (\r\n          <div className=\"progress\">\r\n              <div className=\"indeterminate\"></div>\r\n          </div>\r\n        )\r\n      }\r\n      \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tasks: state.firestore.ordered.tasks,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default withRouter(compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'tasks'}\r\n    ])\r\n)(Tasks))","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Documents from './documents/Documents';\r\nimport Calendar from './calendar/Calendar';\r\nimport Invoices from './invoices/Invoices';\r\nimport Tasks from './tasks/Tasks';\r\nimport { Icon, Button } from 'semantic-ui-react';\r\nimport faker from 'faker';\r\nimport firebase from 'firebase/app';\r\nclass ProjectDetail extends Component {\r\n    state = {\r\n        document: 0,\r\n        calendar:0,\r\n        invoice:0,\r\n        task:0\r\n    }\r\n    getCurrentProject() {\r\n        if(this.props.projects){\r\n            var result = this.props.projects.filter(obj => {\r\n                return obj.id === this.props.match.params.project_id\r\n              })\r\n            \r\n            return result[0];\r\n        }\r\n    } \r\n \r\n    handleClickDocument = () => {\r\n        this.setState({\r\n            document: 1,\r\n            calendar:0,\r\n            invoice:0,\r\n            task:0\r\n        })\r\n    }\r\n    handleClickCalendar = () => {\r\n        this.setState({\r\n            document: 0,\r\n            calendar:1,\r\n            invoice:0,\r\n            task:0\r\n        })\r\n    }\r\n    handleClickInvoice = () => {\r\n        this.setState({\r\n            document: 0,\r\n            calendar:0,\r\n            invoice:1,\r\n            task:0\r\n        })\r\n    }\r\n    handleClickTask = () => {\r\n        this.setState({\r\n            document: 0,\r\n            calendar:0,\r\n            invoice:0,\r\n            task:1\r\n        })\r\n    }\r\n    /*\r\n    handleCreateSample = () => {\r\n        //var faker = require('faker');\r\n        const cp = this.getCurrentProject();\r\n        const firestore = firebase.firestore();\r\n        if(cp){\r\n            firestore.collection('documents').add({\r\n                name: faker.lorem.word(),\r\n                type: faker.system.commonFileType(),\r\n                link: 'https://www.google.com/drive/',\r\n                projectID: cp.id,\r\n                clientID: cp.clientId,\r\n                authorFirstName: 'faker',\r\n                authorLastName: 'faker',\r\n                authorID: this.props.auth.uid,\r\n                createdAt: new Date()\r\n            })\r\n            firestore.collection('calendar').add({\r\n                name: faker.lorem.word(),\r\n                type: faker.system.commonFileType(),\r\n                link: 'https://www.google.com/calendar/',\r\n                projectID: cp.id,\r\n                clientID: cp.clientId,\r\n                authorFirstName: 'faker',\r\n                authorLastName: 'faker',\r\n                authorID: this.props.auth.uid,\r\n                createdAt: new Date()\r\n            })\r\n            firestore.collection('invoices').add({\r\n                title: faker.lorem.word(),\r\n                invoiceNo: faker.random.number(),\r\n                orderedBy: faker.name.firstName() + ' ' + faker.name.lastName(),\r\n                projectID: cp.id,\r\n                clientID: cp.clientId,\r\n                authorFirstName: 'faker',\r\n                authorLastName: 'faker',\r\n                authorID: this.props.auth.uid,\r\n                createdAt: new Date()\r\n            })\r\n            firestore.collection('tasks').add({\r\n                title: faker.lorem.word(),\r\n                orderedBy: faker.name.firstName() + ' ' + faker.name.lastName(),\r\n                projectID: cp.id,\r\n                clientID: cp.clientId,\r\n                authorFirstName: 'faker',\r\n                authorLastName: 'faker',\r\n                authorID: this.props.auth.uid,\r\n                createdAt: new Date()\r\n            })\r\n        }\r\n    }\r\n*/\r\n    render() {\r\n        \r\n        var result = this.getCurrentProject();\r\n\r\n        if(result) {\r\n            const path = '/client/'+result.clientId+'/projects/'+result.id;\r\n            const prev = '/client/'+result.clientId+'/projects/';\r\n            return (\r\n                <div className=\"dashboard container\" style={{paddingTop:50, minWidth:1000, minHeight:1200}}>\r\n                    <nav className=\"nav-extended grey lighten-1\" style={{background: 'linear-gradient(-90deg, #424242, #9e9e9e)'}}>\r\n                        <div className=\"col grey\" style={{paddingLeft: 10, background: 'linear-gradient(-90deg, #424242, #9e9e9e)'}}>\r\n                            <a href=\"/client\" className=\"breadcrumb\">Clients</a>\r\n                            <a href={prev} className=\"breadcrumb\">\r\n                                {\r\n                                    result ? \r\n                                    result.clientFirstName+\r\n                                    ' '+result.clientLastName+\r\n                                    '\\'s Projects'\r\n                                    :\r\n                                    'loading client details...'\r\n                                } \r\n                            </a>\r\n                            <a href=\"#!\" className=\"breadcrumb\">\r\n                                {\r\n                                    result ? \r\n                                    result.title+' Details'\r\n                                    :\r\n                                    'loading client details...'\r\n                                } \r\n                            </a>\r\n    \r\n                        </div>\r\n                        <div className=\"nav-wrapper\" >\r\n\r\n                            {/*<ul style={{paddingLeft:10}}>\r\n                                <li><Button color='orange' onClick={this.handleCreateSample}>Magic button</Button></li>\r\n                            </ul>*/}\r\n                        </div>\r\n                    </nav>\r\n\r\n\r\n                    <div style={{border: '0px solid black', minHeight:600}}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col s1\" style={{borderLeft: '1px solid black', borderBottom:'1px solid black', borderTop:'1px solid black', minHeight:600}}>\r\n                                <button className=\"row center\" style={\r\n                                                                        this.state.document === 1 ?\r\n                                                                        {border: '0px solid black', float: 'right', backgroundColor:'white', minHeight:100}\r\n                                                                        :\r\n                                                                        {border: '0px solid black', float: 'right', minHeight:100}\r\n                                                                    } onClick={this.handleClickDocument}>\r\n                                    <Link to={path+'/documents'}>\r\n                                        <Icon name=\"folder outline\" size=\"huge\" />\r\n                                        <p>Documents</p>\r\n                                    </Link>\r\n                                    \r\n                                    \r\n                                </button>\r\n                                <div className=\"row center\" style={\r\n                                                                        this.state.calendar === 1 ?\r\n                                                                        {border: '0px solid black', float: 'right', backgroundColor:'white', minHeight:100}\r\n                                                                        :\r\n                                                                        {border: '0px solid black', float: 'right', minHeight:100}\r\n                                                                    } onClick={this.handleClickCalendar}>\r\n                                    <Link to={path+'/calendar'} >\r\n                                        <Icon name=\"calendar outline\" size=\"huge\" />\r\n                                        <p>Calendar</p>\r\n                                        \r\n                                    </Link>\r\n                                    \r\n                                </div>\r\n                                <div className=\"row center\" style={\r\n                                                                        this.state.invoice === 1 ?\r\n                                                                        {border: '0px solid black', float: 'right', backgroundColor:'white', minHeight:100}\r\n                                                                        :\r\n                                                                        {border: '0px solid black', float: 'right', minHeight:100}\r\n                                                                    } onClick={this.handleClickInvoice}>\r\n                                    <Link to={path+'/invoices'} >\r\n                                        <Icon name=\"file alternate outline\" size=\"huge\" />\r\n                                        <p>Invoices</p>\r\n                                        \r\n                                    </Link>\r\n                                    \r\n                                </div>\r\n                                <div className=\"row center\" style={\r\n                                                                        this.state.task === 1 ?\r\n                                                                        {border: '0px solid black', float: 'right', backgroundColor:'white', minHeight:100}\r\n                                                                        :\r\n                                                                        {border: '0px solid black', float: 'right', minHeight:100}\r\n                                                                    } onClick={this.handleClickTask}>\r\n                                    <Link to={path+'/tasks'} >\r\n                                        <Icon name=\"tasks\" size=\"huge\" />\r\n                                        <p>Tasks</p>\r\n                                    </Link>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"col s11\" style={{border: '0px solid black', borderTop:'1px solid black',borderBottom:'1px solid black',borderRight:'1px solid black',minHeight:600, backgroundColor:'white'}}>\r\n                                \r\n                                \r\n                                <div className=\"row\" style={{border:'0px solid red'}}>\r\n                                    {this.props.location.pathname.includes('documents') && <Documents />}\r\n                                </div>\r\n                                        \r\n                                        {this.props.location.pathname.includes('calendar') && <Calendar />}\r\n                                        {this.props.location.pathname.includes('invoices') && <Invoices />}\r\n                                        {this.props.location.pathname.includes('tasks') && <Tasks />}\r\n                                    \r\n                                    \r\n                                    \r\n                                            \r\n                                    \r\n                                    \r\n                            \r\n                                \r\n\r\n                            </div>\r\n                            \r\n                            \r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                    \r\n    \r\n    \r\n                \r\n            )\r\n    \r\n        }else {\r\n            return (\r\n                <div className=\"progress\">\r\n                    <div className=\"indeterminate\"></div>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n        \r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state)\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default withRouter(compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['title']}\r\n    ])\r\n)(ProjectDetail))","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport firebase from 'firebase/app'\r\nimport { Link } from 'react-router-dom'\r\nimport ReactTable from 'react-table-v6'\r\nimport { Icon, Select } from 'semantic-ui-react'\r\nimport { Button, Step } from 'semantic-ui-react'\r\nimport _ from 'lodash'\r\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'\r\nimport ReactSearchBox from 'react-search-box'\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        result: []\r\n    };\r\n\r\n    handleResultSelect = (e, { result }) => this.setState({ value: result.id })\r\n\r\n    getSource = () => {\r\n        let source = [];\r\n        let client = {};\r\n        if(this.props.clients){\r\n            this.props.clients.forEach(element => {\r\n                client.id = element.id;\r\n                client.name = element.firstName+' '+element.lastName;\r\n                client.username = element.username;\r\n                source.push(client);\r\n                client = {};\r\n            });\r\n        }\r\n\r\n        return source;\r\n    }\r\n\r\n    handleSearchChange = (e) => {\r\n        let result = [];\r\n        let resource = this.props.clients;\r\n        //console.log(e)\r\n        if(resource.length > 1) {\r\n            resource.forEach(element => {\r\n                if(element.username.includes(e.target.value))\r\n                    result.push(element)\r\n            });\r\n            this.setState({\r\n                result: result\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    handleSearch = (e) => {\r\n        e.preventDefault();\r\n        \r\n        console.log(e.target.value)\r\n\r\n    }\r\n\r\n    handleCreate = () => {\r\n        this.props.history.push('/createclient')\r\n    }\r\n\r\n    handleView = () => {\r\n        this.props.history.push('/client')\r\n    }\r\n    \r\n    render(){\r\n        const columns = [\r\n            {   \r\n                id: 'col1',\r\n                Header: 'Name',\r\n                accessor: d => d.firstName+' '+d.lastName\r\n            }, {\r\n                id: 'col2',\r\n                Header: 'Role',\r\n                width: 100,\r\n                accessor: 'role'\r\n            }, {\r\n                id: 'col3',\r\n                Header: 'email',\r\n                accessor: 'email'\r\n            }, {\r\n                id: 'col4',\r\n                Header: 'Phone No.',\r\n                accessor: 'primaryContact'\r\n            }, {\r\n                id: 'col5',\r\n                Header: 'Add. Contact',\r\n                accessor: 'secondaryContact'\r\n            }, {\r\n                id: 'col6',\r\n                Header: 'Projects',\r\n                width: 75,\r\n                Cell: (row) => (\r\n                        \r\n                        <div>\r\n                            <Link to={'/client/'+row.original.id+'/projects/'}>\r\n                                <Icon name='arrow circle right' size='big' />\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n            }\r\n        ]\r\n        const { clients, auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        const { isLoading, value, results } = this.state;\r\n        const source = this.getSource();\r\n        return (\r\n            <div className=\"dashboard container\" style={{paddingTop:50}}>                   \r\n                <Button color='green' onClick={this.handleCreate} ><Icon name='add' size='small'/>Create a new Client</Button>\r\n                <Button color='green' onClick={this.handleView} ><Icon name='users' size='small'/>View All Clients</Button>\r\n                <h1>Search client</h1>\r\n                \r\n                \r\n                {\r\n                    source.length===0 ? <h1>loading</h1>\r\n                    :\r\n                    <form className=\"white\">\r\n                        <input\r\n                            type=\"text\" \r\n                            id=\"searchbar\"\r\n                            onChange={(e) => {this.handleSearchChange(e)}}\r\n                        />\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn\" onClick={(e) => {this.handleSearch(e)}}>Search</button>\r\n                        </div>\r\n                    </form>\r\n                    \r\n                }\r\n                {\r\n                    this.state.result.length > 0 ? \r\n                    <ReactTable\r\n                        data={this.state.result}\r\n                        columns={columns}\r\n                        defaultPageSize={20}\r\n                        className=\"-striped -highlight\"\r\n                        getTdProps={(state, rowInfo, column, instance) => {\r\n                            if (typeof rowInfo !== \"undefined\") {\r\n                                return {\r\n                                    onClick: (e, handleOriginal) => {\r\n                                        //console.log(rowInfo.original)\r\n                                        this.setState({\r\n                                            selectedClientId: rowInfo.original.id,\r\n                                            selectedClientFirstName: rowInfo.original.firstName,\r\n                                            selectedClientLastName: rowInfo.original.lastName,\r\n                                            selected: rowInfo.index\r\n                                        });\r\n                                        if (handleOriginal) {\r\n                                            handleOriginal()\r\n                                        }\r\n                                    },\r\n                                    style: {\r\n                                        \r\n                                        background: rowInfo.index === this.state.selected ? '#80cbc4' : '',\r\n                                        color: rowInfo.index === this.state.selected ? 'white' : 'black'\r\n                                    }\r\n                                };\r\n                            }\r\n                            else {\r\n                                return {\r\n                                    onClick: (e, handleOriginal) => {\r\n                                        this.setState({\r\n                                            selectedClientId: '',\r\n                                            selectedClientFirstName: '',\r\n                                            selectedClientLastName: '',\r\n                                            selected: -1\r\n                                        });\r\n                                        if (handleOriginal) {\r\n                                            handleOriginal()\r\n                                        }\r\n                                    },\r\n                                    style: {\r\n                                        background: 'white',\r\n                                        color: 'black'\r\n                                    },\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    :\r\n                    <h1>no result</h1>\r\n                \r\n                }\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state);\r\n    return {\r\n        //projects: state.project.projects\r\n        clients: state.firestore.ordered.clients,\r\n        auth: state.firebase.auth\r\n\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'clients'}\r\n    ])\r\n)(Dashboard)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n    \r\n    render(){\r\n        \r\n        return (\r\n            <h1>404</h1>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state);\r\n    return {\r\n        //projects: state.project.projects\r\n        clients: state.firestore.ordered.clients,\r\n        auth: state.firebase.auth\r\n\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'clients'}\r\n    ])\r\n)(Dashboard)","import React from 'react';\nimport { Redirect, BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport ClientTable from './components/clients/Dashboard'\nimport ProjectTable from './components/projects/ProjectTable'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\nimport CreateClient from './components/clients/CreateClient'\nimport EditClient from './components/clients/EditClient';\nimport EditProject from './components/projects/EditProject';\nimport ProjectDetails from './components/projectdetails/ProjectDetail';\nimport Dashboard from './components/dashboard/Dashboard';\nimport NotFoundPage from './components/dashboard/NotFoundPage'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\" style={{backgroundImage:'linear-gradient(to bottom right, #ffffff, #bdbdbd)'}}>\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Redirect exact from=\"/\" to=\"ClientTable\" />\n          <Route exact path='/client' component={ClientTable} />\n          <Route exact path='/client/:id/projects' component={ProjectTable} />\n          <Route path='/editclient/:id' component={EditClient} />\n          <Route path='/client/:client_id/editproject/:project_id' component={EditProject} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/createclient' component={CreateClient} />\n          <Route path='/:id/createproject' component={CreateProject} />\n          <Route path='/client/:client_id/projects/:project_id/' component={ProjectDetails} />\n         \n          <Route path=\"/404\" component={NotFoundPage} />\n          <Redirect to=\"/404\" />\n        </Switch>\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    projects: []\r\n}\r\n\r\nconst projectReducer = (state=initState, action) => {\r\n    //check action type\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('created project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport default projectReducer","const initState = {\r\n    clients: []\r\n}\r\n\r\nconst clientReducer = (state=initState, action) => {\r\n    //check action type\r\n    switch (action.type) {\r\n        case 'CREATE_CLIENT':\r\n            console.log('created client', action.client);\r\n            return state;\r\n        case 'CREATE_CLIENT_ERROR':\r\n            console.log('created client error', action.err);\r\n            return state;\r\n        case 'UPDATE_CLIENT':\r\n            console.log('created client', action.client);\r\n            return state;\r\n        case 'UPDATE_CLIENT_ERROR':\r\n            console.log('created client error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport default clientReducer","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state=initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer","import projectReducer from './projectReducer'\r\nimport clientReducer from './clientReducer'\r\nimport authReducer from './authReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    client: clientReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDqYprWCKDtD0w8J0raT1uzNTxN357MNso\",\r\n    authDomain: \"going-rogue.firebaseapp.com\",\r\n    databaseURL: \"https://going-rogue.firebaseio.com\",\r\n    projectId: \"going-rogue\",\r\n    storageBucket: \"going-rogue.appspot.com\",\r\n    messagingSenderId: \"702357719614\",\r\n    appId: \"1:702357719614:web:bdcf4f560fac7dd4f99f6f\",\r\n    measurementId: \"G-8KHEMR0XDC\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n//firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, createFirestoreInstance, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  attachAuthIsReady: true\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // needed if using firestore\n};\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}